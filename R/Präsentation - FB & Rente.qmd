---
title: "Case Study"
subtitle: "Freie Berufe & Rente"
format: 
  revealjs:
    theme: [default, ../theme/clean_HDI.scss]
    scrollable: true
editor: visual
self-contained: true
author:
  - name: Lukas Feuer
    email: feuerlukas@web.de
date: "05.11.2024"
---

# Freie Berufe

## Fragestellungen 

-   Welcher Inflationsindex passt am besten zu den Daten?
-   Was fällt bei den verschiedenen Indizes auf?
-   Wie können die Unterschiede zwischen den Indizes erklärt werden?

```{r}
#| label: data_load
#| echo: true
#| code-fold: true
#| warning: false
#| message: false

library(tidyverse)

thematic::thematic_off()

hdi_colors <- c(
  "#3ead16"
  , "#B7E0A2"
  , "#2b2b2b"
  , "#ff4f4f"
  , "#b7b7b7"
)

d_raw <- readxl::read_xlsx("../data/Aufgabe FB.xlsx", skip = 3)

d <- d_raw |>
  transmute(
    Jahr = factor(Anfalljahr)
    , Schadensbedarf = `Historischer Schadenbedarf`
    , `Index A` = `Jährliche Inflation Index A`
    , `Index B` = `Jährliche Inflation Index B`
    , `Index C` = `Jährliche Inflation Index C`
  ) |>
  pivot_longer(cols = 2:5, names_to = "name", values_to = "Jährliche Inflation")

```

## Datengrundlage {.smaller}

-   Indizes B und C haben einen sehr ähnlichen Verlauf
-   Die Veränderungsraten von Index B und Index C kovariieren auf den ersten Blick eher mit der Zeitreihe des Schadenbedarfs als Index A


```{r}
#| echo: true
#| code-fold: true
d |>
  #filter(name != "Schadensbedarf") |> 
  ggplot(aes(Jahr, `Jährliche Inflation`, colour = name, group = name)) +
  geom_line() +
  facet_wrap(vars(name), scales = "free_y", ncol = 1) +
  #scale_y_continuous(labels = scales::percent_format()) +
  labs(
    #title = "Jährliche Inflation"
    #, subtitle = "Veränderungsraten von 2013 bis 2023"
     x = NULL, y = NULL
  ) +
  theme_light() +
  theme(legend.position = "none") +
  scale_colour_manual(values = hdi_colors)
```


## Umrechnung Indizes {.smaller}

-   Als Index mit dem Basisjahr 2012 ergibt sich für Index B eine Steigerung von 22% über den Betrachtungszeitraum, dies deckt sich am ehesten mit der Veränderung von 33,1% in den Schadensbedarfen
-   Die Veränderung in Index A mit etwa 35% stimmt jedoch am ehesten mit der absoluten Zunahme in den Schadensbedarfen am Ende des Betrachtungszeitraums überein


```{r}
#| echo: true
#| code-fold: true

d_raw |>
  transmute(
    Jahr = factor(Anfalljahr)
    , Schadensbedarf = `Historischer Schadenbedarf`
    , `Index A` = `Jährliche Inflation Index A` +1
    , `Index B` = `Jährliche Inflation Index B` +1
    , `Index C` = `Jährliche Inflation Index C` +1
  ) -> x

tribble(
  ~Jahr, ~Schadensbedarf, ~`Index A`, ~`Index B`, ~`Index C`
  , 2012, 0, 100, 100, 100
) |> mutate(Jahr = factor(Jahr)) |>
  bind_rows(x) |>
  transmute(
    Jahr
    , `Index A` = accumulate(`Index A`, `*`)
    , `Index B` = accumulate(`Index B`, `*`)
    , `Index C` = accumulate(`Index C`, `*`)
  ) |>
  pivot_longer(2:4, names_to = "Index", values_to = "Wert") |>
  ggplot(aes(Jahr, Wert, group = Index, colour = Index)) +
  geom_line() +
  facet_wrap(vars(Index), ncol = 1, scales = "free_y") +
  labs(
    title = "Jährliche Inflation"
    , subtitle = "Indizes von 2013 bis 2023, Basisjahr = 2012"
    , x = NULL, y = NULL
  ) +
  scale_colour_manual(values = hdi_colors) +
  theme_light() +
  theme(legend.position = "none") 
```


## Quantifizierte Zusammenhänge {.smaller}

```{r}
#| echo: true
#| code-fold: true
#| warning: false

library(fpp3)

d_raw |> 
  rename(
    Schadenbedarf = `Historischer Schadenbedarf`
    , `Index A` = `Jährliche Inflation Index A`
    , `Index B` = `Jährliche Inflation Index B`
    , `Index C` = `Jährliche Inflation Index C`
  ) |> 
  GGally::ggpairs(2:5)

```

-   Indizes B und C sind kollinear
-   Paarweise Vergleiche zeigen hohe bivariate Korrelationen von Index B/C mit den jährlichen Schadenbedarfen
-   Index A korreliert negativ mit den Schadenbedarfen
-   Zur Abschätzung der marginalen Effekte wurde eine einfache Multivariate Regression für Zeitreihen gerechnet (Einschränkungen durch geringe Stichprobengröße bei Interpretation berücksichtigen)
-   Schadenbedarfe haben einen leichten positiven Trend, daher wird auch ein Modell mit einem `trend()` getestet


## Modellvergleiche

-   Gesamtheitliche Betrachtung der Informationskriterien zeigt, dass ein Modell nur mit Index B zu bevorzugen ist, auch wenn R^2^ dadurch nicht maximiert wird
-   Ein Trend verbessert die Varianzaufklärung, ist jedoch insbesondere unter Berücksichtigung des AIC~c~ keine bedeutende Ergänzung für das Modell
-   Vergleiche der Modelle zeigen damit auch keinen zusätzlichen Informationszugewinn durch das Einbeziehen von Index A

```{r}
#| echo: true
#| code-fold: true
fit_schaden <- d_raw |> 
  tsibble(index = Anfalljahr) |> 
  model(
    TSLM_AB = TSLM(`Historischer Schadenbedarf` ~  `Jährliche Inflation Index A` + `Jährliche Inflation Index B`)
    , TSLM_AB_Trend = TSLM(`Historischer Schadenbedarf` ~ trend() + `Jährliche Inflation Index A` + `Jährliche Inflation Index B`)
    , TSLM_B_Trend = TSLM(`Historischer Schadenbedarf` ~ trend() + `Jährliche Inflation Index B`)
    , TSLM_B = TSLM(`Historischer Schadenbedarf` ~ `Jährliche Inflation Index B`)
    )

glance(fit_schaden) |> 
  transmute(Model = .model, adj_r_squared, CV, AIC, AICc, BIC) |> 
  knitr::kable()
```

## Finales Modell

```{r}
#| echo: true
#| code-fold: true

fit_schaden_final <- d_raw |> 
  tsibble(index = Anfalljahr) |> 
  model(
    tslm = TSLM(`Historischer Schadenbedarf` ~ `Jährliche Inflation Index B`)
    )
report(fit_schaden_final)
```
```{r}
#| code-fold: true
#| warning: false
gg_tsresiduals(fit_schaden_final)
```

## Zusammenfassung

### Bewertung
- Index B passt am Besten zu den Daten 
- Index C wäre eine sinnvolle Alternative 
- Beide variieren systematisch mit Schadenbedarfen

### Weitergehende Analyse
- Index A: Einfluss des Extremwerte und Einfluss auf Ergebnisse - ggf. Korrektur
- Vergleich der Quellen für Index B & C
- Breiterer Betrachtungszeitraum 

# Renten

## Fragestellungen

-   Welche zusätzliche Information lassen sich aus den vorhandenen Daten ableiten?
-   Welche Auffälligkeiten oder Zusammenhänge lassen sich im Datensatz finden?

## Datensatz {.smaller}

:::: {.columns}

::: {.column width="50%"}
### Vorhandene Features

-   Index
-   Höhe der (monatlichen?) Rentenauszahlung
-   Rentenbeginn (Datum [^1])
-   Rentenende (Datum)
-   Geburtsdatum (Datum)
-   Geschlecht (2, 1, NA)
-   Segment
-   Adresse

[^1]: alle Daten im Excel-Datumsformat angeliefert

:::

::: {.column width="50%"}
### Neue Features

-   Alle Datumswerte ISO-Konvertiert (Origin = `1899-12-30 UTC`)
-   Geburtsjahr
-   Rentendauer (bei vorhandendem Enddatum)
-   Alter bei Rentenbeginn
-   Alter bei Rentenende
-   Alter heute (05.11.2024)
-   Rentenmonate (bis zum 05.11.2024)
-   Adresskomponenten (Straße, Hausnummer, PLZ, Ort)
-   Summe der bisher ausgezahlten (monatlichen) Rente
:::

::::

```{r}
#| label: data_load 2
#| echo: true
#| code-fold: true
#| warning: false
#| message: false

library(tidyverse)
library(GGally)
library(fpp3)

thematic::thematic_off()

d_raw <- readxl::read_xlsx("../data/Renten.xlsx")

d <- d_raw |>
  mutate(
    Nummer = NULL
    , Segment = factor(Segment)
    , Rente_Beginn_Datum = lubridate::as_date(Rente_Beginn_Datum, origin = "1899-12-30 UTC")
    , Rente_Ende_Datum = lubridate::as_date(Rente_Ende_Datum, origin = "1899-12-30 UTC")
    , Geburtsdatum = lubridate::as_date(Geburtsdatum, origin = "1899-12-30 UTC")
    , Geburtsjahr = lubridate::year(Geburtsdatum)
    , Geschlecht = factor(Geschlecht
                          , levels = c(2, 1, NA)
                          , labels = c("Weiblich", "Männlich")) 
    , Rentendauer = lubridate::interval(Rente_Beginn_Datum, Rente_Ende_Datum) %/% lubridate::years(1)
    , Rente_Beginn_Alter = lubridate::interval(Geburtsdatum, Rente_Beginn_Datum) %/% lubridate::years(1)
    , Rente_Ende_Alter = lubridate::interval(Geburtsdatum, Rente_Ende_Datum) %/% lubridate::years(1)
    , Ort = factor(str_extract(Adresse, "\\w+$"))
    , PLZ = factor(str_squish(str_extract(Adresse, "[:space:]\\d{5}[:space:]")))
    , Strasse = factor(str_squish(str_extract(Adresse, "^\\D+(?=\\d)")))
    , Nr = parse_number(str_extract(Adresse, "[:space:]\\d{1,3}(?=,)"))
    , Rentenmonate = lubridate::interval(Rente_Beginn_Datum, lubridate::as_date("2024-11-05")) %/% months(1)
    , Alter_heute = lubridate::interval(Geburtsdatum, lubridate::as_date("2024-11-05")) %/% lubridate::years(1)
)

```


## Überblick {.smaller}

-   Einige Extremwerte in der Höhe der Rentenauszahlung (TODO: leaverage?)
-   499 der 600 Einträge entfallen auf das Segment Unfall
-   Der Rest enfällt auf Kraftfahrthaftpflicht (n = 64) und Heilwesenhaftpflicht (n = 25)
-   Sehr wenige Fälle für Privathaftpflicht (n = 3) und Betriebshaftpflicht (n = 9)

```{r}
#| echo: true
#| code-fold: true
#| warning: false
x <- d |>
  filter(Renten_Auszahlung < 30000
         , !is.na(Geschlecht)
         , Segment %in% c("Unfall", "Kraftfahrthaftpflicht", "Heilwesenhaftpflicht")
         , ) |>
  select("Renten_Auszahlung", "Geschlecht", "Segment", "Alter_heute", "Rente_Beginn_Alter") #

GGally::ggpairs(x)

```


## Überblick

```{r}
#| echo: true
#| code-fold: true
#| warning: false

GGally::ggpairs(x, mapping = aes(colour = Segment, alpha = 0.5)) +
  scale_fill_manual(values = hdi_colors) +
  scale_colour_manual(values = hdi_colors) +
  theme_light() +
  theme(text = element_text(size = 8))

```

## Geschlecht

-   Kein Schlüssel für Zuordnung vorgegeben, Kodierung nach [ISO/IEC 5218](https://de.wikipedia.org/wiki/Datenstandards_zur_Beschreibung_des_Geschlechts) angenommen
-   Beide Ausprägungen etwa gleich häufig vorhanden
-   Fünf fehlende Werte
-   Keine großen Effekte zwischen den Geschlechtern (geringer als erwartet)

### Vergleich Rentenauszahlungen

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| layout: [[1,1]]
d |> 
  filter(Segment == "Unfall") |> 
  summarise(mean= mean(Renten_Auszahlung), median = median(Renten_Auszahlung), n = n(), .by = Geschlecht) |> 
  knitr::kable(caption = "Segment Unfall")

d |> 
  filter(Segment == "Kraftfahrthaftpflicht") |> 
  summarise(mean= mean(Renten_Auszahlung), median = median(Renten_Auszahlung), n = n(), .by = Geschlecht) |> 
  knitr::kable(caption = "Segment Kraftfahrthaftpflicht")
```

## Ort

-   1:1 Beziehung zwischen Ort und PLZ
-   16 Orte/PLZ
-   Sehr viele Fälle aus Berlin, Hannover, Hamburg und München (zusammen n = 417)
-   Kein erkennbares Muster in Straßenverteilung


```{r}
#| echo: true
#| code-fold: true
#| warning: false
# layout: [[1,1]]
library(ggridges)
d |>
  ggplot(aes(x = Renten_Auszahlung, Ort, fill = Ort)) +
  geom_density_ridges(alpha = 0.3) +
  geom_point(position = "jitter", alpha = 0.2, aes(color = Ort)) +
  theme_ridges() +
  theme(legend.position = "none") +
  labs(x = NULL, y = NULL, title = "Verteilung der Rentenauszahlungen pro Stadt")
```

---

```{r}
#| echo: true
#| code-fold: true
#| warning: false
d |>
  count(Strasse, sort = T) |>
  ggplot(aes(x = n, y = Strasse)) +
  geom_point() +
  lims(x = c(0, 40))+
  labs(x = NULL, y = NULL, title = "Häufigkeit der Straßennamen")
```

## Verteilung Rentenauszahlung

-   Verteilung der Renten sind log-normal

```{r}
#| echo: true
#| code-fold: true
#| warning: false
d |>
  transmute(
    Renten_Auszahlung
    , Renten_Auszahlung_log = log(Renten_Auszahlung)
  ) |>
  ggplot(aes(Renten_Auszahlung_log)) +
  geom_histogram(bins = 45, fill = "#3ead16", color = "lightgray", alpha = 0.7) 
```

## Kummulierte Rentenauszahlungen {.smaller}

-   Keine Sterbeinformation
-   Hinterlegte Rentenenddaten liegen fast ausschließlich in der Zukunft
-   Korrektur für Inflation (Daten für Verbraucherpreisindex nur bis 1992)
-   Annahmen
    -   Jährliche Anpassung der Renten (alleinig) basierend auf Verbraucherpreisindex
    -   Rentenauszahlung erfolgt monatlich
    -   Auszahlungen in €
-   Seit 1992 wurden etwa 432 Mio. € ausgezahlt (477 Mio. € ohne Anpassung)

```{r}
#| echo: true
#| code-fold: true
#| warning: false
# Korrektur für Inflation?
Rentenzahlungen_ts <- d |>
  filter(year(Rente_Beginn_Datum) > 1991) |>
  transmute(
    Renten_Auszahlung, Rente_Beginn_Datum = yearmonth(Rente_Beginn_Datum)
    , Datum_Zwischenstand = yearmonth("2024-11-05")
  ) |>
  rownames_to_column("id") |>
  pivot_longer(cols = c(Rente_Beginn_Datum, Datum_Zwischenstand)) |>
  as_tsibble(index = value, key = id) |>
  tsibble::fill_gaps() |>
  tidyr::fill(Renten_Auszahlung, .direction = "down") |>
  select(-name)

CPI <- readxl::read_excel("../data/verbraucherpreisindex-lange-reihen-xlsx-5611103.xlsx"
                   , sheet = "CPI")
Inflation <- CPI |>
  mutate(
    Jahr = parse_number(Jahr)
    , Index = Index / 100
  )

Rentenzahlungen_ts |>
  as_tibble() |>
  mutate(Jahr = year(value)) |>
  left_join(Inflation, by = "Jahr") |>
  tidyr::replace_na(
    list(Index = 1) # keine Daten für 2023, 2024
  ) |>
  transmute(
    value #, id
    , Renten_Auszahlung
    , Renten_Auszahlung_ib = Renten_Auszahlung * Index
  ) |>
  group_by(value) |>
  dplyr::summarise(Renten_Auszahlung = sum(Renten_Auszahlung)
            , Renten_Auszahlung_ib = sum(Renten_Auszahlung_ib)
             ) |>
  ggplot(aes(value)) +
  geom_line(aes(y = Renten_Auszahlung_ib, colour = "#ff4f4f")) +
  geom_line(aes(y = Renten_Auszahlung), colour = "#3ead16") +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::dollar_format(prefix = "€")) +
  labs(x = NULL, y = NULL,
       title = "Monatliche Rentenauszahlungen"
       , subtitle = "Inflationsanpassung in Rot")

```



## Rentenbeginn und Alter {.smaller}

-   Unterschiedlichen Verteilungen pro Segment
-   Drei Fälle, bei denen der Rentenbeginn z.T. mehrere Jahre vor der Geburt liegt
-   Unfallrente beginnt hier häufig erst (vermeintlich) mit der gesetzlichen Altersrente, jedoch zunehmend im höheren Alter
-   Rentenbeginn für die Haftpflicht-Segmente liegt fast ausnahmslos unterhalb des gesetzlichen Rentenalters
-   Betriebs- und Privathaftpflicht nicht interpretierbar

```{r}
#| echo: true
#| code-fold: true
#| warning: false
pl2 <- d |>
  ggplot(aes(Rente_Beginn_Datum, Rente_Beginn_Alter, colour = Segment)) +
  geom_point() +
  geom_abline(slope = 0, intercept = 0, colour = "lightgray") +
  scale_colour_manual(values = rev(hdi_colors))


pl2 <-   plotly::ggplotly(pl2)

pl2
```

## Rentenbeginn {.smaller}

-   Große Unterschiede zwischen den Segmenten
-   Keine eindeutige Saisonalität (Quartal)
-   Unfall 2011: Änderungen in der gesetzlichen Altersrente
-   Zeitliche Häufung ggf. auf unterschiedliche Produkte zurückführbar

```{r}
#| echo: true
#| code-fold: true
#| warning: false
pl1 <- d |>
  select(Rente_Beginn_Datum, Segment) |>
  transmute(
    ym = year(Rente_Beginn_Datum)
    , Segment
  ) |>
  count(ym, Segment) |>
  tsibble(index = ym, key = Segment) |> 
  ggplot(aes(ym, n)) +
  geom_line(aes(colour = Segment)) +
  scale_color_manual(values = rev(hdi_colors))  

pl1 <- plotly::ggplotly(pl1)

pl1
```

## Rentenende {.smaller}

-   Enddatum für die Rente ist nur in 33 Fällen hinterlegt
-   Fast ausschließlich für Kraftfahrthaftpflicht (n = 24) und nie im Segment Unfall
-   Alter zum hinterlegten End-Zeitpunkt ist für KF- und Privat- Haftpflicht zum Zeitpunkt des vermeitlichen Beginns der gesetzlichen Altersrente
-   Alter zum Rentenenddatum bei der Heilwesenhaftpflicht deutlich niedriger (regelmäßige Überprüfung?)

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| layout: [[1,1,1]]
d |>
  ggplot(aes(Rente_Ende_Alter)) +
  geom_histogram(bins = 20, aes(fill = Segment), color = "lightgray") +
  scale_fill_manual(values = c("#ff4f4f", "#2b2b2b", "#B7E0A2")) +
  labs(y="Anzahl", x = NULL, title = "Alter zum hinterlegten Enddatum") +
  theme_minimal()

d_s2 <- d |> 
  filter(Segment == "Kraftfahrthaftpflicht") |> 
  mutate(Segment2 = ifelse(is.na(Rente_Ende_Datum), "Ohne Enddatum", "Mit Enddatum")) 

d_s2 |> 
  ggplot(aes(Renten_Auszahlung, Segment2, fill = Segment)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = NULL, y = NULL, title = "Rentenauszahlung im Segement Kraftfahrthaftpflicht") +
  scale_fill_manual(values = hdi_colors) +
  theme(legend.position = "none")

d_s2 |> 
  ggplot(aes(Alter_heute, Segment2, fill = Segment)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = NULL, y = NULL, title = "Altersverteilung im Segement Kraftfahrthaftpflicht") +
  scale_fill_manual(values = hdi_colors[2]) +
  theme(legend.position = "none")
```



## Alter {.smaller}

-   Errechnetes heutiges Alter (05.11.2024)
-   Sehr große Anzahl an Personen über 90 und über 100 Jahre (Markierung)
-   Fehlen ggf. Sterbedaten

```{r}
#| echo: true
#| code-fold: true
#| warning: false
d |> ggplot(aes(Alter_heute)) +
  geom_histogram(fill = "#3ead16", color = "lightgray", alpha = 0.7) +
  geom_vline(xintercept = 100)
```

## Zusammenfassung 

### Weitergehende Analyse 

- Fünf Einträge ohne Geschlecht
- Detailbetrachtung der Extremwerte insbes. in der Rentenauszahlung, Alter, Rentenbeginn
- Welche Verträge/Produkte liegen den Renten zugrunde



## Vielen Dank für die Aufmerksamkeit!

Der Code für die präsentierten Analysen ist [hier](https://github.com/lukasfeuer/VVaG) zu finden